import json
import os
import textwrap
import random

ARQUIVO = "perguntas.json"
WRAP_WIDTH = 100 # largura mÃ¡xima das linhas no console

def carregar_perguntas():
    if os.path.exists(ARQUIVO):
        with open(ARQUIVO, "r", encoding="utf-8") as f:
            return json.load(f)
    return []

def mostrar_texto_formatado(texto, largura=WRAP_WIDTH):
    paragrafos = texto.split("\n")
    for p in paragrafos:
        if p.strip():
            print(textwrap.fill(p, largura))
            print()

def limpar_console():
    os.system("cls" if os.name == "nt" else "clear")

def jogar():
    perguntas = carregar_perguntas()
    if not perguntas:
        print("Nenhuma pergunta cadastrada no arquivo JSON!")
        return

    random.shuffle(perguntas)

    erros = []
    acertos = 0

    print("\n Iniciando o Quiz!\n")
    for i, p in enumerate(perguntas, 1):
        limpar_console()
        print(f"Pergunta {i}/{len(perguntas)}:\n")
        mostrar_texto_formatado(p['pergunta'])

        for j, alt in enumerate(p["alternativas"], 1):
            print(f"  {j}) {alt}")

        try:
            resp = int(input("\nSua resposta (nÃºmero): ")) - 1
        except:
            resp = -1

        if resp == p["correta"]:
            print("\n [C] Resposta correta!\n")
            acertos += 1
        else:
            print("\n [X]  Resposta errada!")
            correta_text = p["alternativas"][p["correta"]]
            sua_text = p["alternativas"][resp] if 0 <= resp < len(p["alternativas"]) else "InvÃ¡lida"
            print(f"Correto: {correta_text}\n")
            erros.append({
                "pergunta": p["pergunta"],
                "sua_resposta": sua_text,
                "correta": correta_text
            })

        input("\nPressione ENTER para continuar...")

    limpar_console()
    print(r"""
        <-.(`-')               _       (`-')                                             (`-').->(`-')  _           
        __( OO)       .->    (_)      ( OO).->         .->      <-.        <-.          ( OO)_  ( OO).-/ _         
        '-'---\_) ,--.(,--.   ,-(`-'),(_/----.     (`-')----. (`-')-----.(`-')-----.    (_)--\_)(,------. \-,-----. 
        |  .-.  |  |  | |(`-') | ( OO)|__,    |     ( OO).-.  '(OO|(_\---'(OO|(_\---'    /    _ / |  .---'  |  .--./ 
        |  | | <-' |  | |(OO ) |  |  ) (_/   /      ( _) | |  | / |  '--.  / |  '--.     \_..`--.(|  '--.  /_) (`-') 
        |  | |  |  |  | | |  \(|  |_/  .'  .'_       \|  |)|  | \_)  .--'  \_)  .--'     .-._)   \|  .--'  ||  |OO ) 
        '  '-'  '-.\  '-'(_ .' |  |'->|       |       '  '-'  '  `|  |_)    `|  |_)      \       /|  `---.(_'  '--'\ 
        `-----'--' `-----'    `--'   `-------'        `-----'    `--'       `--'         `-----' `------'   `-----' 

    """)
    print("\n\n Resultado Final:")
    print(f"VocÃª acertou {acertos}/{len(perguntas)} perguntas!\n")

    input("\nPressione ENTER para continuar...")

    contador = 1

    if erros:
        print("VocÃª errou as seguintes questÃµes:\n")
        for e in erros:
            limpar_console()
            print("\nVocÃª errou as seguintes questÃµes:\n")
            print(f"Erro Numero [X] {contador}:")
            print("-" + "-"*70)
            mostrar_texto_formatado(e['pergunta'])
            print(f"   Sua resposta: {e['sua_resposta']}")
            print(f"   Correta: {e['correta']}\n")
            input("\nPressione ENTER para continuar...")
            contador += 1
    else:
        print("ParabÃ©ns, vocÃª acertou todas! ðŸŽ‰")
        input("\nPressione ENTER para continuar...")


def mostrar_menu_art():
    limpar_console()
    print(r"""
        <-.(`-')               _       (`-')                                             (`-').->(`-')  _           
        __( OO)       .->    (_)      ( OO).->         .->      <-.        <-.          ( OO)_  ( OO).-/ _         
        '-'---\_) ,--.(,--.   ,-(`-'),(_/----.     (`-')----. (`-')-----.(`-')-----.    (_)--\_)(,------. \-,-----. 
        |  .-.  |  |  | |(`-') | ( OO)|__,    |     ( OO).-.  '(OO|(_\---'(OO|(_\---'    /    _ / |  .---'  |  .--./ 
        |  | | <-' |  | |(OO ) |  |  ) (_/   /      ( _) | |  | / |  '--.  / |  '--.     \_..`--.(|  '--.  /_) (`-') 
        |  | |  |  |  | | |  \(|  |_/  .'  .'_       \|  |)|  | \_)  .--'  \_)  .--'     .-._)   \|  .--'  ||  |OO ) 
        '  '-'  '-.\  '-'(_ .' |  |'->|       |       '  '-'  '  `|  |_)    `|  |_)      \       /|  `---.(_'  '--'\ 
        `-----'--' `-----'    `--'   `-------'        `-----'    `--'       `--'         `-----' `------'   `-----' 

    """)
    print("1 - Jogar")
    print("2 - Sair")
    opc = input("\nEscolha: ")
    return opc

# ---------- MENU ----------
if __name__ == "__main__":
    while True:
        opc = mostrar_menu_art()
        if opc == "1":
            jogar()
        elif opc == "2":
            break
        else:
            print("\nOpÃ§Ã£o invÃ¡lida!")
            input("Pressione ENTER para continuar...")
